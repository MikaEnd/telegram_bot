import os
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –Ø ManagerBot. –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: /uptime /disk /memory /cpu')

# –ö–æ–º–∞–Ω–¥–∞ /uptime
async def uptime(update: Update, context: ContextTypes.DEFAULT_TYPE):
    output = os.popen('uptime -p').read()
    await update.message.reply_text(f"üïí –ê–ø—Ç–∞–π–º —Å–µ—Ä–≤–µ—Ä–∞:\n{output}")

# –ö–æ–º–∞–Ω–¥–∞ /disk
async def disk(update: Update, context: ContextTypes.DEFAULT_TYPE):
    output = os.popen('df -h').read()
    await update.message.reply_text(f"üíΩ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–æ–≤:\n{output}")

# –ö–æ–º–∞–Ω–¥–∞ /memory
async def memory(update: Update, context: ContextTypes.DEFAULT_TYPE):
    output = os.popen('free -h').read()
    await update.message.reply_text(f"üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:\n{output}")

# –ö–æ–º–∞–Ω–¥–∞ /cpu
async def cpu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    output = os.popen('top -bn1 | grep "Cpu(s)"').read()
    await update.message.reply_text(f"‚öôÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ CPU:\n{output}")

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("uptime", uptime))
    app.add_handler(CommandHandler("disk", disk))
    app.add_handler(CommandHandler("memory", memory))
    app.add_handler(CommandHandler("cpu", cpu))

    app.run_polling()

if __name__ == '__main__':
    main()
